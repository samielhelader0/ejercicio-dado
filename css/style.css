@import url(https://fonts.googleapis.com/css?family=Roboto:300,700);
body{
	margin: 0;
	padding: 0;
	font-family: 'Roboto', sans-serif;
	background: #333;
	color: #fff;
}
header {
	padding: 20px;
}
h1{
	font-weight: 700;
	text-transform: uppercase;
}
p{
	font-weight: 300;
}
a {
	color: gray;
}
section {
	display: flex; /*La propiedad display:flex; se le da al padre contenedor de los elementos es la forma en qe se trabaja felx-box*/
	justify-content: center;/*justyfi lo que haces alinear el contenido horizontalmente en este caso center centra todo*/
	flex-wrap: wrap;/*wrap lo que hace es decir si queremos o no que los contenido hagan un salto linea wrap hace que si lo hagan nowrap haria que permanecieran en la misma linea*/
}
[class^="cara-"]{
	display: flex;/*aca hace lo mismo en el contenedor anterior pero se pone aca por que cada nuevp padre debe llevar la propiedad */
	margin: 1em;
	width: 150px;
	height: 150px;
	padding: 15px;
	background: #FEFEF6;
	border-radius: 10%;
	
}	
.cara-uno{
	justify-content: center;/*aca funciona para acomodar la bolita en el centro de forma horizontal*/
	align-items: center;/*es parecido a justyfi pero aca lo hace de forma vertical*/
}
.cara-dos{
	justify-content: space-between; /*aca hace un espaciado en tre cada elemento pero no entre cada elemento y el padre ese lo hariamos con space-around*/
}
.cara-dos .punto:nth-child(2){
	align-self: flex-end; /*aca lo posiona en el final del contendor ose que lo baja por decirlo asi solo se aplica a uno sola bolita por el nth*/
}
.cara-tres{
	justify-content: space-between;/*los separa en horizontalidad*/
}
.cara-tres .punto:nth-child(2){
	align-self: center;/*aling-self es una propiedad usada en el item mas no en el padre, lo organiza de forma vertical */
}
.cara-tres .punto:nth-child(3){
	align-self: flex-end;/*alinea solo el item ya sabemos, pero esta al final para dar un linea en diagianl de la cara 3 del dado*/
}
.cara-cuatro{
	justify-content: space-between;/*separa las bolitas en horizontal*/
}
.cara-cuatro .columna {
	display: flex;/*siempre debe ir cada que hay un padre nuevo o no un padre nuevo sino un contenedor que tenga contenido que querramos manejar*/
	flex-direction: column;/*direction tiene como parametro por defecto la propiedad ROW pero en este caso utilizamos colum par ponerlo de forma vertical*/
	justify-content: space-between;/*da un espaciado entre si de forma horizontal*/
}
.cara-cinco{
	display: flex;/*nuevo contenedor otra vez display felx*/
	justify-content: space-between; /*espaciado de forma horizontal*/
}
.cara-cinco .columna {
	display: flex;/*siempre en cada contenedor a modificar debe ir display flex*/
	flex-direction: column; /*otra vez lo organiza en forma de columna*/
	justify-content: space-between; /*tambien podriamos utilizar sapece-aroud "ya me stoy quedando sin ideas de que comentarios hacer profe"*/
}
.cara-cinco .medio{
	align-self: center;/*para alinear unicamente los items segunt yo se podria organizar cada bolita con esta propiedad pero tengo mis dudas*/
}
.cara-seis{
	display: flex;/*siempre en contendor debe ir flex*/
	justify-content: space-between;/*funciona para separa el contenido uno del otro*/
}
.cara-seis .columna{
	display: flex;/*al ser contendor debe llevar display felx para que felxbox funcione */
	flex-direction: column;/*en forma vertical organiza los items*/
	justify-content: space-between;/*nos organiza los items por separado uno del otro*/
}
.punto {
	width: 20px;
	height: 20px;
	border-radius: 50%;
	background: black;
	box-shadow: inset 0 3px #111, inset 0 -3px #555;
}